.code
  PUSH 60			contract RevertTest {\n    
  ...
  PUSH 40			contract RevertTest {\n    
  ...
  MSTORE 			contract RevertTest {\n    
  ...
  CALLVALUE 			function RevertTest() public {...
  ISZERO 			function RevertTest() public {...
  PUSH [tag] 1			function RevertTest() public {...
  JUMPI 			function RevertTest() public {...
  PUSH 0			function RevertTest() public {...
  DUP1 			function RevertTest() public {...
  REVERT 			function RevertTest() public {...
tag 1			function RevertTest() public {...
  JUMPDEST 			function RevertTest() public {...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract RevertTest {\n    
  ...
  DUP1 			contract RevertTest {\n    
  ...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract RevertTest {\n    
  ...
  PUSH 0			contract RevertTest {\n    
  ...
  CODECOPY 			contract RevertTest {\n    
  ...
  PUSH 0			contract RevertTest {\n    
  ...
  RETURN 			contract RevertTest {\n    
  ...
.data
  0:
    .code
      PUSH 60			contract RevertTest {\n    
  ...
      PUSH 40			contract RevertTest {\n    
  ...
      MSTORE 			contract RevertTest {\n    
  ...
      PUSH 4			contract RevertTest {\n    
  ...
      CALLDATASIZE 			contract RevertTest {\n    
  ...
      LT 			contract RevertTest {\n    
  ...
      PUSH [tag] 1			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
      PUSH 0			contract RevertTest {\n    
  ...
      CALLDATALOAD 			contract RevertTest {\n    
  ...
      PUSH 100000000000000000000000000000000000000000000000000000000			contract RevertTest {\n    
  ...
      SWAP1 			contract RevertTest {\n    
  ...
      DIV 			contract RevertTest {\n    
  ...
      PUSH FFFFFFFF			contract RevertTest {\n    
  ...
      AND 			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      PUSH 15153B7F			contract RevertTest {\n    
  ...
      EQ 			contract RevertTest {\n    
  ...
      PUSH [tag] 2			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      PUSH 27E27E88			contract RevertTest {\n    
  ...
      EQ 			contract RevertTest {\n    
  ...
      PUSH [tag] 3			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      PUSH 58632138			contract RevertTest {\n    
  ...
      EQ 			contract RevertTest {\n    
  ...
      PUSH [tag] 4			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      PUSH 68C03163			contract RevertTest {\n    
  ...
      EQ 			contract RevertTest {\n    
  ...
      PUSH [tag] 5			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      PUSH 7F471D16			contract RevertTest {\n    
  ...
      EQ 			contract RevertTest {\n    
  ...
      PUSH [tag] 6			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      PUSH 8F8BB185			contract RevertTest {\n    
  ...
      EQ 			contract RevertTest {\n    
  ...
      PUSH [tag] 7			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      PUSH AA8C217C			contract RevertTest {\n    
  ...
      EQ 			contract RevertTest {\n    
  ...
      PUSH [tag] 8			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      PUSH DFA562D4			contract RevertTest {\n    
  ...
      EQ 			contract RevertTest {\n    
  ...
      PUSH [tag] 9			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      PUSH F956BF4A			contract RevertTest {\n    
  ...
      EQ 			contract RevertTest {\n    
  ...
      PUSH [tag] 10			contract RevertTest {\n    
  ...
      JUMPI 			contract RevertTest {\n    
  ...
    tag 1			contract RevertTest {\n    
  ...
      JUMPDEST 			contract RevertTest {\n    
  ...
      PUSH 0			contract RevertTest {\n    
  ...
      DUP1 			contract RevertTest {\n    
  ...
      REVERT 			contract RevertTest {\n    
  ...
    tag 2			function TRequire(uint256 newA...
      JUMPDEST 			function TRequire(uint256 newA...
      CALLVALUE 			function TRequire(uint256 newA...
      ISZERO 			function TRequire(uint256 newA...
      PUSH [tag] 11			function TRequire(uint256 newA...
      JUMPI 			function TRequire(uint256 newA...
      PUSH 0			function TRequire(uint256 newA...
      DUP1 			function TRequire(uint256 newA...
      REVERT 			function TRequire(uint256 newA...
    tag 11			function TRequire(uint256 newA...
      JUMPDEST 			function TRequire(uint256 newA...
      PUSH [tag] 12			function TRequire(uint256 newA...
      PUSH 4			function TRequire(uint256 newA...
      DUP1 			function TRequire(uint256 newA...
      DUP1 			function TRequire(uint256 newA...
      CALLDATALOAD 			function TRequire(uint256 newA...
      SWAP1 			function TRequire(uint256 newA...
      PUSH 20			function TRequire(uint256 newA...
      ADD 			function TRequire(uint256 newA...
      SWAP1 			function TRequire(uint256 newA...
      SWAP2 			function TRequire(uint256 newA...
      SWAP1 			function TRequire(uint256 newA...
      POP 			function TRequire(uint256 newA...
      POP 			function TRequire(uint256 newA...
      PUSH [tag] 13			function TRequire(uint256 newA...
      JUMP 			function TRequire(uint256 newA...
    tag 12			function TRequire(uint256 newA...
      JUMPDEST 			function TRequire(uint256 newA...
      STOP 			function TRequire(uint256 newA...
    tag 3			function TView(uint256 newAmou...
      JUMPDEST 			function TView(uint256 newAmou...
      CALLVALUE 			function TView(uint256 newAmou...
      ISZERO 			function TView(uint256 newAmou...
      PUSH [tag] 14			function TView(uint256 newAmou...
      JUMPI 			function TView(uint256 newAmou...
      PUSH 0			function TView(uint256 newAmou...
      DUP1 			function TView(uint256 newAmou...
      REVERT 			function TView(uint256 newAmou...
    tag 14			function TView(uint256 newAmou...
      JUMPDEST 			function TView(uint256 newAmou...
      PUSH [tag] 15			function TView(uint256 newAmou...
      PUSH 4			function TView(uint256 newAmou...
      DUP1 			function TView(uint256 newAmou...
      DUP1 			function TView(uint256 newAmou...
      CALLDATALOAD 			function TView(uint256 newAmou...
      SWAP1 			function TView(uint256 newAmou...
      PUSH 20			function TView(uint256 newAmou...
      ADD 			function TView(uint256 newAmou...
      SWAP1 			function TView(uint256 newAmou...
      SWAP2 			function TView(uint256 newAmou...
      SWAP1 			function TView(uint256 newAmou...
      POP 			function TView(uint256 newAmou...
      POP 			function TView(uint256 newAmou...
      PUSH [tag] 16			function TView(uint256 newAmou...
      JUMP 			function TView(uint256 newAmou...
    tag 15			function TView(uint256 newAmou...
      JUMPDEST 			function TView(uint256 newAmou...
      PUSH 40			function TView(uint256 newAmou...
      MLOAD 			function TView(uint256 newAmou...
      DUP1 			function TView(uint256 newAmou...
      DUP3 			function TView(uint256 newAmou...
      ISZERO 			function TView(uint256 newAmou...
      ISZERO 			function TView(uint256 newAmou...
      ISZERO 			function TView(uint256 newAmou...
      ISZERO 			function TView(uint256 newAmou...
      DUP2 			function TView(uint256 newAmou...
      MSTORE 			function TView(uint256 newAmou...
      PUSH 20			function TView(uint256 newAmou...
      ADD 			function TView(uint256 newAmou...
      SWAP2 			function TView(uint256 newAmou...
      POP 			function TView(uint256 newAmou...
      POP 			function TView(uint256 newAmou...
      PUSH 40			function TView(uint256 newAmou...
      MLOAD 			function TView(uint256 newAmou...
      DUP1 			function TView(uint256 newAmou...
      SWAP2 			function TView(uint256 newAmou...
      SUB 			function TView(uint256 newAmou...
      SWAP1 			function TView(uint256 newAmou...
      RETURN 			function TView(uint256 newAmou...
    tag 4			function TPure(uint256 newAmou...
      JUMPDEST 			function TPure(uint256 newAmou...
      CALLVALUE 			function TPure(uint256 newAmou...
      ISZERO 			function TPure(uint256 newAmou...
      PUSH [tag] 17			function TPure(uint256 newAmou...
      JUMPI 			function TPure(uint256 newAmou...
      PUSH 0			function TPure(uint256 newAmou...
      DUP1 			function TPure(uint256 newAmou...
      REVERT 			function TPure(uint256 newAmou...
    tag 17			function TPure(uint256 newAmou...
      JUMPDEST 			function TPure(uint256 newAmou...
      PUSH [tag] 18			function TPure(uint256 newAmou...
      PUSH 4			function TPure(uint256 newAmou...
      DUP1 			function TPure(uint256 newAmou...
      DUP1 			function TPure(uint256 newAmou...
      CALLDATALOAD 			function TPure(uint256 newAmou...
      SWAP1 			function TPure(uint256 newAmou...
      PUSH 20			function TPure(uint256 newAmou...
      ADD 			function TPure(uint256 newAmou...
      SWAP1 			function TPure(uint256 newAmou...
      SWAP2 			function TPure(uint256 newAmou...
      SWAP1 			function TPure(uint256 newAmou...
      POP 			function TPure(uint256 newAmou...
      POP 			function TPure(uint256 newAmou...
      PUSH [tag] 19			function TPure(uint256 newAmou...
      JUMP 			function TPure(uint256 newAmou...
    tag 18			function TPure(uint256 newAmou...
      JUMPDEST 			function TPure(uint256 newAmou...
      PUSH 40			function TPure(uint256 newAmou...
      MLOAD 			function TPure(uint256 newAmou...
      DUP1 			function TPure(uint256 newAmou...
      DUP3 			function TPure(uint256 newAmou...
      DUP2 			function TPure(uint256 newAmou...
      MSTORE 			function TPure(uint256 newAmou...
      PUSH 20			function TPure(uint256 newAmou...
      ADD 			function TPure(uint256 newAmou...
      SWAP2 			function TPure(uint256 newAmou...
      POP 			function TPure(uint256 newAmou...
      POP 			function TPure(uint256 newAmou...
      PUSH 40			function TPure(uint256 newAmou...
      MLOAD 			function TPure(uint256 newAmou...
      DUP1 			function TPure(uint256 newAmou...
      SWAP2 			function TPure(uint256 newAmou...
      SUB 			function TPure(uint256 newAmou...
      SWAP1 			function TPure(uint256 newAmou...
      RETURN 			function TPure(uint256 newAmou...
    tag 5			function TRevert(uint256 newAm...
      JUMPDEST 			function TRevert(uint256 newAm...
      CALLVALUE 			function TRevert(uint256 newAm...
      ISZERO 			function TRevert(uint256 newAm...
      PUSH [tag] 20			function TRevert(uint256 newAm...
      JUMPI 			function TRevert(uint256 newAm...
      PUSH 0			function TRevert(uint256 newAm...
      DUP1 			function TRevert(uint256 newAm...
      REVERT 			function TRevert(uint256 newAm...
    tag 20			function TRevert(uint256 newAm...
      JUMPDEST 			function TRevert(uint256 newAm...
      PUSH [tag] 21			function TRevert(uint256 newAm...
      PUSH 4			function TRevert(uint256 newAm...
      DUP1 			function TRevert(uint256 newAm...
      DUP1 			function TRevert(uint256 newAm...
      CALLDATALOAD 			function TRevert(uint256 newAm...
      SWAP1 			function TRevert(uint256 newAm...
      PUSH 20			function TRevert(uint256 newAm...
      ADD 			function TRevert(uint256 newAm...
      SWAP1 			function TRevert(uint256 newAm...
      SWAP2 			function TRevert(uint256 newAm...
      SWAP1 			function TRevert(uint256 newAm...
      POP 			function TRevert(uint256 newAm...
      POP 			function TRevert(uint256 newAm...
      PUSH [tag] 22			function TRevert(uint256 newAm...
      JUMP 			function TRevert(uint256 newAm...
    tag 21			function TRevert(uint256 newAm...
      JUMPDEST 			function TRevert(uint256 newAm...
      STOP 			function TRevert(uint256 newAm...
    tag 6			function CallPure(uint256 newA...
      JUMPDEST 			function CallPure(uint256 newA...
      CALLVALUE 			function CallPure(uint256 newA...
      ISZERO 			function CallPure(uint256 newA...
      PUSH [tag] 23			function CallPure(uint256 newA...
      JUMPI 			function CallPure(uint256 newA...
      PUSH 0			function CallPure(uint256 newA...
      DUP1 			function CallPure(uint256 newA...
      REVERT 			function CallPure(uint256 newA...
    tag 23			function CallPure(uint256 newA...
      JUMPDEST 			function CallPure(uint256 newA...
      PUSH [tag] 24			function CallPure(uint256 newA...
      PUSH 4			function CallPure(uint256 newA...
      DUP1 			function CallPure(uint256 newA...
      DUP1 			function CallPure(uint256 newA...
      CALLDATALOAD 			function CallPure(uint256 newA...
      SWAP1 			function CallPure(uint256 newA...
      PUSH 20			function CallPure(uint256 newA...
      ADD 			function CallPure(uint256 newA...
      SWAP1 			function CallPure(uint256 newA...
      SWAP2 			function CallPure(uint256 newA...
      SWAP1 			function CallPure(uint256 newA...
      POP 			function CallPure(uint256 newA...
      POP 			function CallPure(uint256 newA...
      PUSH [tag] 25			function CallPure(uint256 newA...
      JUMP 			function CallPure(uint256 newA...
    tag 24			function CallPure(uint256 newA...
      JUMPDEST 			function CallPure(uint256 newA...
      PUSH 40			function CallPure(uint256 newA...
      MLOAD 			function CallPure(uint256 newA...
      DUP1 			function CallPure(uint256 newA...
      DUP3 			function CallPure(uint256 newA...
      DUP2 			function CallPure(uint256 newA...
      MSTORE 			function CallPure(uint256 newA...
      PUSH 20			function CallPure(uint256 newA...
      ADD 			function CallPure(uint256 newA...
      SWAP2 			function CallPure(uint256 newA...
      POP 			function CallPure(uint256 newA...
      POP 			function CallPure(uint256 newA...
      PUSH 40			function CallPure(uint256 newA...
      MLOAD 			function CallPure(uint256 newA...
      DUP1 			function CallPure(uint256 newA...
      SWAP2 			function CallPure(uint256 newA...
      SUB 			function CallPure(uint256 newA...
      SWAP1 			function CallPure(uint256 newA...
      RETURN 			function CallPure(uint256 newA...
    tag 7			function TThrow(uint256 newAmo...
      JUMPDEST 			function TThrow(uint256 newAmo...
      CALLVALUE 			function TThrow(uint256 newAmo...
      ISZERO 			function TThrow(uint256 newAmo...
      PUSH [tag] 26			function TThrow(uint256 newAmo...
      JUMPI 			function TThrow(uint256 newAmo...
      PUSH 0			function TThrow(uint256 newAmo...
      DUP1 			function TThrow(uint256 newAmo...
      REVERT 			function TThrow(uint256 newAmo...
    tag 26			function TThrow(uint256 newAmo...
      JUMPDEST 			function TThrow(uint256 newAmo...
      PUSH [tag] 27			function TThrow(uint256 newAmo...
      PUSH 4			function TThrow(uint256 newAmo...
      DUP1 			function TThrow(uint256 newAmo...
      DUP1 			function TThrow(uint256 newAmo...
      CALLDATALOAD 			function TThrow(uint256 newAmo...
      SWAP1 			function TThrow(uint256 newAmo...
      PUSH 20			function TThrow(uint256 newAmo...
      ADD 			function TThrow(uint256 newAmo...
      SWAP1 			function TThrow(uint256 newAmo...
      SWAP2 			function TThrow(uint256 newAmo...
      SWAP1 			function TThrow(uint256 newAmo...
      POP 			function TThrow(uint256 newAmo...
      POP 			function TThrow(uint256 newAmo...
      PUSH [tag] 28			function TThrow(uint256 newAmo...
      JUMP 			function TThrow(uint256 newAmo...
    tag 27			function TThrow(uint256 newAmo...
      JUMPDEST 			function TThrow(uint256 newAmo...
      STOP 			function TThrow(uint256 newAmo...
    tag 8			uint256 public amount
      JUMPDEST 			uint256 public amount
      CALLVALUE 			uint256 public amount
      ISZERO 			uint256 public amount
      PUSH [tag] 29			uint256 public amount
      JUMPI 			uint256 public amount
      PUSH 0			uint256 public amount
      DUP1 			uint256 public amount
      REVERT 			uint256 public amount
    tag 29			uint256 public amount
      JUMPDEST 			uint256 public amount
      PUSH [tag] 30			uint256 public amount
      PUSH [tag] 31			uint256 public amount
      JUMP 			uint256 public amount
    tag 30			uint256 public amount
      JUMPDEST 			uint256 public amount
      PUSH 40			uint256 public amount
      MLOAD 			uint256 public amount
      DUP1 			uint256 public amount
      DUP3 			uint256 public amount
      DUP2 			uint256 public amount
      MSTORE 			uint256 public amount
      PUSH 20			uint256 public amount
      ADD 			uint256 public amount
      SWAP2 			uint256 public amount
      POP 			uint256 public amount
      POP 			uint256 public amount
      PUSH 40			uint256 public amount
      MLOAD 			uint256 public amount
      DUP1 			uint256 public amount
      SWAP2 			uint256 public amount
      SUB 			uint256 public amount
      SWAP1 			uint256 public amount
      RETURN 			uint256 public amount
    tag 9			function TAssert(uint256 newAm...
      JUMPDEST 			function TAssert(uint256 newAm...
      CALLVALUE 			function TAssert(uint256 newAm...
      ISZERO 			function TAssert(uint256 newAm...
      PUSH [tag] 32			function TAssert(uint256 newAm...
      JUMPI 			function TAssert(uint256 newAm...
      PUSH 0			function TAssert(uint256 newAm...
      DUP1 			function TAssert(uint256 newAm...
      REVERT 			function TAssert(uint256 newAm...
    tag 32			function TAssert(uint256 newAm...
      JUMPDEST 			function TAssert(uint256 newAm...
      PUSH [tag] 33			function TAssert(uint256 newAm...
      PUSH 4			function TAssert(uint256 newAm...
      DUP1 			function TAssert(uint256 newAm...
      DUP1 			function TAssert(uint256 newAm...
      CALLDATALOAD 			function TAssert(uint256 newAm...
      SWAP1 			function TAssert(uint256 newAm...
      PUSH 20			function TAssert(uint256 newAm...
      ADD 			function TAssert(uint256 newAm...
      SWAP1 			function TAssert(uint256 newAm...
      SWAP2 			function TAssert(uint256 newAm...
      SWAP1 			function TAssert(uint256 newAm...
      POP 			function TAssert(uint256 newAm...
      POP 			function TAssert(uint256 newAm...
      PUSH [tag] 34			function TAssert(uint256 newAm...
      JUMP 			function TAssert(uint256 newAm...
    tag 33			function TAssert(uint256 newAm...
      JUMPDEST 			function TAssert(uint256 newAm...
      STOP 			function TAssert(uint256 newAm...
    tag 10			function Change(uint256 newAmo...
      JUMPDEST 			function Change(uint256 newAmo...
      CALLVALUE 			function Change(uint256 newAmo...
      ISZERO 			function Change(uint256 newAmo...
      PUSH [tag] 35			function Change(uint256 newAmo...
      JUMPI 			function Change(uint256 newAmo...
      PUSH 0			function Change(uint256 newAmo...
      DUP1 			function Change(uint256 newAmo...
      REVERT 			function Change(uint256 newAmo...
    tag 35			function Change(uint256 newAmo...
      JUMPDEST 			function Change(uint256 newAmo...
      PUSH [tag] 36			function Change(uint256 newAmo...
      PUSH 4			function Change(uint256 newAmo...
      DUP1 			function Change(uint256 newAmo...
      DUP1 			function Change(uint256 newAmo...
      CALLDATALOAD 			function Change(uint256 newAmo...
      SWAP1 			function Change(uint256 newAmo...
      PUSH 20			function Change(uint256 newAmo...
      ADD 			function Change(uint256 newAmo...
      SWAP1 			function Change(uint256 newAmo...
      SWAP2 			function Change(uint256 newAmo...
      SWAP1 			function Change(uint256 newAmo...
      POP 			function Change(uint256 newAmo...
      POP 			function Change(uint256 newAmo...
      PUSH [tag] 37			function Change(uint256 newAmo...
      JUMP 			function Change(uint256 newAmo...
    tag 36			function Change(uint256 newAmo...
      JUMPDEST 			function Change(uint256 newAmo...
      STOP 			function Change(uint256 newAmo...
    tag 13			function TRequire(uint256 newA...
      JUMPDEST 			function TRequire(uint256 newA...
      PUSH A			10
      DUP2 			newAmount
      GT 			newAmount > 10
      ISZERO 			require(newAmount > 10)
      ISZERO 			require(newAmount > 10)
      PUSH [tag] 39			require(newAmount > 10)
      JUMPI 			require(newAmount > 10)
      PUSH 0			require(newAmount > 10)
      DUP1 			require(newAmount > 10)
      REVERT 			require(newAmount > 10)
    tag 39			require(newAmount > 10)
      JUMPDEST 			require(newAmount > 10)
      DUP1 			newAmount
      PUSH 0			amount
      DUP2 			amount = newAmount
      SWAP1 			amount = newAmount
      SSTORE 			amount = newAmount
      POP 			amount = newAmount
      POP 			function TRequire(uint256 newA...
      JUMP [out]			function TRequire(uint256 newA...
    tag 16			function TView(uint256 newAmou...
      JUMPDEST 			function TView(uint256 newAmou...
      PUSH 0			bool
      DUP2 			newAmount
      PUSH 0			amount
      SLOAD 			amount
      GT 			amount > newAmount
      SWAP1 			return amount > newAmount
      POP 			return amount > newAmount
      SWAP2 			function TView(uint256 newAmou...
      SWAP1 			function TView(uint256 newAmou...
      POP 			function TView(uint256 newAmou...
      JUMP [out]			function TView(uint256 newAmou...
    tag 19			function TPure(uint256 newAmou...
      JUMPDEST 			function TPure(uint256 newAmou...
      PUSH 0			uint256
      PUSH A			10
      DUP3 			newAmount
      MUL 			newAmount * 10
      SWAP1 			return newAmount * 10
      POP 			return newAmount * 10
      SWAP2 			function TPure(uint256 newAmou...
      SWAP1 			function TPure(uint256 newAmou...
      POP 			function TPure(uint256 newAmou...
      JUMP [out]			function TPure(uint256 newAmou...
    tag 22			function TRevert(uint256 newAm...
      JUMPDEST 			function TRevert(uint256 newAm...
      PUSH A			10
      DUP2 			newAmount
      GT 			newAmount > 10
      ISZERO 			if (newAmount > 10){\n        ...
      PUSH [tag] 43			if (newAmount > 10){\n        ...
      JUMPI 			if (newAmount > 10){\n        ...
      DUP1 			newAmount
      PUSH 0			amount
      DUP2 			amount = newAmount
      SWAP1 			amount = newAmount
      SSTORE 			amount = newAmount
      POP 			amount = newAmount
      PUSH [tag] 44			if (newAmount > 10){\n        ...
      JUMP 			if (newAmount > 10){\n        ...
    tag 43			if (newAmount > 10){\n        ...
      JUMPDEST 			if (newAmount > 10){\n        ...
      PUSH 0			revert()
      DUP1 			revert()
      REVERT 			revert()
    tag 44			if (newAmount > 10){\n        ...
      JUMPDEST 			if (newAmount > 10){\n        ...
      POP 			function TRevert(uint256 newAm...
      JUMP [out]			function TRevert(uint256 newAm...
    tag 25			function CallPure(uint256 newA...
      JUMPDEST 			function CallPure(uint256 newA...
      PUSH 0			uint256
      PUSH A			10
      PUSH [tag] 46			TPure(newAmount)
      DUP4 			newAmount
      PUSH [tag] 19			TPure
      JUMP [in]			TPure(newAmount)
    tag 46			TPure(newAmount)
      JUMPDEST 			TPure(newAmount)
      MUL 			TPure(newAmount) * 10
      SWAP1 			return TPure(newAmount) * 10
      POP 			return TPure(newAmount) * 10
      SWAP2 			function CallPure(uint256 newA...
      SWAP1 			function CallPure(uint256 newA...
      POP 			function CallPure(uint256 newA...
      JUMP [out]			function CallPure(uint256 newA...
    tag 28			function TThrow(uint256 newAmo...
      JUMPDEST 			function TThrow(uint256 newAmo...
      PUSH A			10
      DUP2 			newAmount
      GT 			newAmount > 10
      ISZERO 			if (newAmount > 10){\n        ...
      PUSH [tag] 48			if (newAmount > 10){\n        ...
      JUMPI 			if (newAmount > 10){\n        ...
      DUP1 			newAmount
      PUSH 0			amount
      DUP2 			amount = newAmount
      SWAP1 			amount = newAmount
      SSTORE 			amount = newAmount
      POP 			amount = newAmount
      PUSH [tag] 49			if (newAmount > 10){\n        ...
      JUMP 			if (newAmount > 10){\n        ...
    tag 48			if (newAmount > 10){\n        ...
      JUMPDEST 			if (newAmount > 10){\n        ...
      PUSH 0			0
      DUP2 			newAmount
      DUP2 			newAmount/0
      ISZERO 			newAmount/0
      ISZERO 			newAmount/0
      PUSH [tag] 50			newAmount/0
      JUMPI 			newAmount/0
      INVALID 			newAmount/0
    tag 50			newAmount/0
      JUMPDEST 			newAmount/0
      POP 			newAmount/0
      POP 			newAmount/0
    tag 49			if (newAmount > 10){\n        ...
      JUMPDEST 			if (newAmount > 10){\n        ...
      POP 			function TThrow(uint256 newAmo...
      JUMP [out]			function TThrow(uint256 newAmo...
    tag 31			uint256 public amount
      JUMPDEST 			uint256 public amount
      PUSH 0			uint256 public amount
      SLOAD 			uint256 public amount
      DUP2 			uint256 public amount
      JUMP [out]			uint256 public amount
    tag 34			function TAssert(uint256 newAm...
      JUMPDEST 			function TAssert(uint256 newAm...
      PUSH A			10
      DUP2 			newAmount
      GT 			newAmount > 10
      ISZERO 			assert(newAmount > 10)
      ISZERO 			assert(newAmount > 10)
      PUSH [tag] 52			assert(newAmount > 10)
      JUMPI 			assert(newAmount > 10)
      INVALID 			assert(newAmount > 10)
    tag 52			assert(newAmount > 10)
      JUMPDEST 			assert(newAmount > 10)
      DUP1 			newAmount
      PUSH 0			amount
      DUP2 			amount = newAmount
      SWAP1 			amount = newAmount
      SSTORE 			amount = newAmount
      POP 			amount = newAmount
      POP 			function TAssert(uint256 newAm...
      JUMP [out]			function TAssert(uint256 newAm...
    tag 37			function Change(uint256 newAmo...
      JUMPDEST 			function Change(uint256 newAmo...
      DUP1 			newAmount
      PUSH 0			amount
      DUP2 			amount = newAmount
      SWAP1 			amount = newAmount
      SSTORE 			amount = newAmount
      POP 			amount = newAmount
      POP 			function Change(uint256 newAmo...
      JUMP [out]			function Change(uint256 newAmo...
    .data
